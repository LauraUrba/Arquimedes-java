package Telas;
import Telas.TelaCadastro;
import Telas.TelaCatalogo;
import Telas.TelaLogin;
import modelo.Conexao;
import java.sql.*;
import javax.swing.JOptionPane;

import javax.swing.*;
import java.awt.event.*;
import java.util.logging.Level;
import java.util.logging.Logger;

  
/**
 *
 * @author laura
 */
public class TelaAdm extends javax.swing.JFrame {


  /*public void dispose() {
         super.dispose();
    }*/
    /**
     * Creates new form TelaLivro
     */
    public TelaAdm() {
        initComponents();
        Email.setName("Email");
    Senha.setName("Senha");
    
    btnEntrar.setName("btnEntrar");
    btnCadastro1.setName("btnCadastro");
    btnListar.setName("btnListar");
    listagem.setName("listagem");
    btnDeletar.setName("btnDeletar");
    btnAtualizar1.setName("btnAtualizar");

    btnCadastro1.addActionListener(this::btnCadastro1ActionPerformed);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        Senha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        btnDeletar = new javax.swing.JButton();
        btnAtualizar1 = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnCadastro1 = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnEntrar = new javax.swing.JButton();
        listagem = new javax.swing.JLabel();
        Login = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 255));
        jLabel3.setText("Senha");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(170, 210, 90, 50);

        Senha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SenhaActionPerformed(evt);
            }
        });
        getContentPane().add(Senha);
        Senha.setBounds(260, 220, 230, 30);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 255));
        jLabel2.setText("Email");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(170, 160, 90, 50);

        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });
        getContentPane().add(Email);
        Email.setBounds(260, 170, 230, 30);

        btnDeletar.setBackground(new java.awt.Color(198, 186, 255));
        btnDeletar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeletar.setForeground(new java.awt.Color(255, 255, 255));
        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeletar);
        btnDeletar.setBounds(510, 270, 100, 40);

        btnAtualizar1.setBackground(new java.awt.Color(198, 186, 255));
        btnAtualizar1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAtualizar1.setForeground(new java.awt.Color(255, 255, 255));
        btnAtualizar1.setText("Atualizar");
        btnAtualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizar1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtualizar1);
        btnAtualizar1.setBounds(400, 270, 100, 40);

        btnListar.setBackground(new java.awt.Color(198, 186, 255));
        btnListar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnListar.setForeground(new java.awt.Color(255, 255, 255));
        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        getContentPane().add(btnListar);
        btnListar.setBounds(310, 270, 80, 40);

        btnCadastro1.setBackground(new java.awt.Color(198, 186, 255));
        btnCadastro1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCadastro1.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastro1.setText("Cadastrar");
        btnCadastro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastro1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastro1);
        btnCadastro1.setBounds(180, 270, 120, 40);

        btnVoltar.setBackground(new java.awt.Color(198, 186, 255));
        btnVoltar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltar);
        btnVoltar.setBounds(20, 330, 90, 30);

        btnEntrar.setBackground(new java.awt.Color(198, 186, 255));
        btnEntrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEntrar.setForeground(new java.awt.Color(255, 255, 255));
        btnEntrar.setText("Entrar");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEntrar);
        btnEntrar.setBounds(60, 270, 100, 40);

        listagem.setText("\"-------------------------------------------------------------------------------------------------------------------------------\"");
        getContentPane().add(listagem);
        listagem.setBounds(20, 390, 640, 170);

        Login.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Login.setForeground(new java.awt.Color(153, 0, 255));
        Login.setText("Login do Administrador");
        getContentPane().add(Login);
        Login.setBounds(160, 60, 470, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SenhaActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
            TelaInicial telaInicial = new TelaInicial();
            telaInicial.setVisible(true);
           this.dispose();  
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        // TODO add your handling code here:
               /*TelaCatalogo telaCatalogo = new TelaCatalogo();
               telaCatalogo.setVisible(true);*/

    String email= Email.getText().trim();
    String senha = Senha.getText().trim();

     //Coloquei ontem o preencimento obrigatório dos campos 
    if (email.isEmpty() || senha.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos.");
        return;
    }

    try (Connection conexao = Conexao.conectar();
         PreparedStatement stmt = conexao.prepareStatement("SELECT * FROM Administrador WHERE Email = ? AND Senha = ? LIMIT 1")) {

        stmt.setString(1, email);
        stmt.setString(2, senha);

        try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Login realizado com sucesso!");
                TelaAdm telaAdm = new TelaAdm();
                telaAdm.setVisible(true);
                this.dispose(); // Fecha a tela atual
            } else {
                JOptionPane.showMessageDialog(null, "Email ou senha inválidos.");
            }
        }
    } catch (SQLException erro) {
        JOptionPane.showMessageDialog(null, "Erro no login: " + erro.getMessage());
    }

    }//GEN-LAST:event_btnEntrarActionPerformed

    private void btnCadastro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastro1ActionPerformed
        // TODO add your handling code here:

                String email = Email.getText();
               String senha = Senha.getText();

               
                   try (Connection conexao = Conexao.conectar()) {
                        String sql = "INSERT INTO Administrador (email, Senha) VALUES (?, ?)";
                        try (PreparedStatement stmt = conexao.prepareStatement(sql)) {
                            stmt.setString(1, email);
                            stmt.setString(2, senha);
                            int resultado = stmt.executeUpdate(); // Executa a inserção uma única vez
                            if (resultado > 0) {
                                JOptionPane.showMessageDialog(this, "Usuário cadastrado com sucesso!");
                                
                                // Limpar os campos
                                Email.setText("");
                                Senha.setText("");
                            } else {
                                JOptionPane.showMessageDialog(null, "Falha ao cadastrar usuário.");
                            }
                            // Fechar o statement após a execução
                            // Fechar a conexão
                        }
                    }

            catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar: " + erro.getMessage());
            }
    }//GEN-LAST:event_btnCadastro1ActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:

                   /*Connection con = Conexao.conectar();
                    String sql = "SELECT * FROM Usuario";
                    PreparedStatement stmt = null;
                          try {
                              stmt = con.prepareStatement(sql);
                          } catch (SQLException ex) {
                              Logger.getLogger(TelaAdm.class.getName()).log(Level.SEVERE, null, ex);
                          }
                    ResultSet rs = null;
                          try {
                              rs = stmt.executeQuery();
                          } catch (SQLException ex) {
                              Logger.getLogger(TelaAdm.class.getName()).log(Level.SEVERE, null, ex);
                          }

                    try {
                        while (rs.next()) {
                            int matricula = rs.getInt("Matricula");
                            String nome = rs.getString("Nome");
                            String email = rs.getString("Email");
                            String endereco = rs.getString("Endereco");
                            String telefone = rs.getString("Telefone");
                            String senha = rs.getString("Senha");
                            String tipoUsuario = rs.getString("TipoUsuario");

                            System.out.println("Matrícula: " + matricula);
                            System.out.println("Nome: " + nome);
                            System.out.println("Email: " + email);
                            System.out.println("Telefone: " + telefone);
                            System.out.println("Endereço: " + endereco);
                            System.out.println("Senha: " + senha);
                            System.out.println("Tipo: " + tipoUsuario);
                            System.out.println("--------------");
                        }     } catch (SQLException ex) {
                        Logger.getLogger(TelaAdm.class.getName()).log(Level.SEVERE, null, ex);
                    }*/
                   
                   
                   
           StringBuilder listaUsuarios = new StringBuilder();

           Connection con = Conexao.conectar();
           String sql = "SELECT * FROM Usuario";

           try {
               try (PreparedStatement stmt = con.prepareStatement(sql); ResultSet rs = stmt.executeQuery()) {
                   String html = "<html><table border='1'>";
                   html += "<tr><th>Matrícula</th><th>Nome</th><th>Email</th><th>Endereço</th><th>Telefone</th><th>Senha</th><th>Tipo</th></tr>";
                   
                   
                   while (rs.next()) {
                       int matricula = rs.getInt("Matricula");
                       String nome = rs.getString("Nome");
                       String email = rs.getString("Email");
                       String endereco = rs.getString("Endereco");
                       String telefone = rs.getString("Telefone");
                       String senha = rs.getString("Senha");
                       String tipoUsuario = rs.getString("TipoUsuario");
                       
                       // Adiciona os dados ao StringBuilder
                       html += "<tr>";
                       html += "<td>" + matricula + "</td>";
                       html += "<td>" + nome + "</td>";
                       html += "<td>" + email + "</td>";
                       html += "<td>" + endereco + "</td>";
                       html += "<td>" + telefone + "</td>";
                       html += "<td>" + senha + "</td>";
                       html += "<td>" + tipoUsuario + "</td>";
                       html += "</tr>";
                   }
                   
                   // Exibir os usuários no JTextArea
                   html += "</table></html>";
                   
                   // Exibir os usuários na JLabel (Listagem)
                    listagem.setText(html.toString()); // isso precisa ser visível no teste fim-a-fim

            JOptionPane.showMessageDialog(this, "Usuários listado com sucesso!"); // opcional, só se quiser manter o optionPane no teste
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao listar usuários: " + ex.getMessage());
    }


    }//GEN-LAST:event_btnListarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
                String email = Email.getText().trim();

               if (email.isEmpty()) {
                   JOptionPane.showMessageDialog(null, "Informe o e-mail do usuário que deseja deletar.");
                   return;
               }

               int confirmacao = JOptionPane.showConfirmDialog(null,
                       "Tem certeza que deseja excluir o usuário com e-mail: " + email + "?",
                       "Confirmar Exclusão", JOptionPane.YES_NO_OPTION);

               if (confirmacao == JOptionPane.YES_OPTION) {
                   try {
                       try (Connection conexao = Conexao.conectar()) {
                           String sql = "DELETE FROM Usuario WHERE Email = ?";
                           PreparedStatement stmt = conexao.prepareStatement(sql);
                           stmt.setString(1, email);
                           
                           int linhasAfetadas = stmt.executeUpdate();
                           
                           if (linhasAfetadas > 0) {
                               JOptionPane.showMessageDialog(null, "Usuário deletado com sucesso!");
                           } else {
                               JOptionPane.showMessageDialog(null, "Usuário não encontrado.");
                           }
                       }
                   } catch (SQLException erro) {
                       JOptionPane.showMessageDialog(null, "Erro ao deletar usuário: " + erro.getMessage());
                   }
               }

    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnAtualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizar1ActionPerformed
    String email = Email.getText().trim();
    String novaSenha = Senha.getText().trim();

    if (email.isEmpty() && novaSenha.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Informe o e-mail e/ou nova senha do usuário que deseja atualizar.");
        return;
    }

    int confirmacao = JOptionPane.showConfirmDialog(null,
            "Tem certeza que deseja atualizar os dados do usuário com e-mail: " + email + "?",
            "Confirmar Atualização", JOptionPane.YES_NO_OPTION);

    if (confirmacao == JOptionPane.YES_OPTION) {
        try {
            try (Connection conexao = Conexao.conectar()) {
                String sql = "UPDATE Usuario SET Senha = ? WHERE Email = ?";
                PreparedStatement stmt = conexao.prepareStatement(sql);
                stmt.setString(1, novaSenha);
                stmt.setString(2, email);
                
                int linhasAfetadas = stmt.executeUpdate();
                
                if (linhasAfetadas > 0) {
                    JOptionPane.showMessageDialog(null, "Usuário atualizado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Usuário não encontrado.");
                }
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar usuário: " + erro.getMessage());
        }
    }
    }//GEN-LAST:event_btnAtualizar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Email;
    private javax.swing.JLabel Login;
    private javax.swing.JTextField Senha;
    private javax.swing.JButton btnAtualizar1;
    private javax.swing.JButton btnCadastro1;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnEntrar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel listagem;
    // End of variables declaration//GEN-END:variables
}
